language: cpp

script: cmake

compiler:
 - clang
 - gcc

env:
  matrix:
    #- BUILD_TYPE=Debug
    - BUILD_TYPE=Release
    - ASAN=On
    - GCC_VERSION="4.9"

matrix:
  exclude:
    - compiler: gcc
      env: ASAN=On
    - compiler: clang
      env: GCC_VERSION="4.9"

# Install dependencies
before_install:
  - export CHECKOUT_PATH=`pwd`;
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo add-apt-repository ppa:kalakris/cmake -y
  - sudo add-apt-repository ppa:boost-latest/ppa -y
  - sudo apt-get update -qq
  - sudo apt-get install cmake
  # Used foer determining the boost verion on the machine
  #- sudo apt-get install aptitude
  #- aptitude search libboost
  - export BOOST_VERSION="1.55"
  - sudo apt-get install libboost-thread${BOOST_VERSION}-dev libboost-chrono${BOOST_VERSION}-dev libboost-date-time${BOOST_VERSION}-dev libboost-system${BOOST_VERSION}-dev libboost-test${BOOST_VERSION}-dev libboost-timer${BOOST_VERSION}-dev #libboost1.55-all-dev
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-${GCC_VERSION}; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi

  # Install libc++ if tests are run with clang++
  - if [ "$CXX" == "clang++" ]; then export LIBCXX=On; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then cd libcxx/lib && bash buildit; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then sudo cp ./libc++.so.1.0 /usr/lib/; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then cd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
  - if [ -n "$LIBCXX" -a "$CXX" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd; fi

install:
  - cd $CHECKOUT_PATH
  - if [ ! -d build ]; then mkdir build; fi
  - cd build
  - export CXX_FLAGS="-DTEST_SIZE=1024"
  - export CXX_LINKER_FLAGS=""
  - if [ -z "$BUILD_TYPE" ]; then export BUILD_TYPE=Release; fi
  - if [ -n "$ASAN" ]; then export CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
  - if [ "$CXX" == "clang++" ]; then CXX_FLAGS="${CXX_FLAGS} -D__extern_always_inline=inline"; fi
  - if [ -n "$LIBCXX" ]; then CXX_FLAGS="${CXX_FLAGS} -stdlib=libc++ -I/usr/include/c++/v1/"; fi
  - if [ -n "$LIBCXX" ]; then CXX_LINKER_FLAGS="${CXX_FLAGS} -L/usr/lib/ -lc++"; fi

  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="-Wl,--no-as-needed ${CXX_LINKER_FLAGS} -lrt"
  - make VERBOSE=1
script:
  # disable unit tests on clang because they won't run without a libc++ compiled boost.
  - if [ "$CXX" != "clang++" ]; then ctest -VV; fi